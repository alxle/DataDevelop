<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuM4zml1AA
        AAkUSURBVFhHrZZ5UNRHFscn+s8mG427m1pvl3hW1I0KmqjJFoiKGFHReAIinijGsBjwAoIgCwgDAR2R
        S2AEQRBEEJURZOQabgbkvm8EOQYYZrj5bv96xhECJlqVV/Vq+HUX/f30e69fN4ux2iT7v1Wn2itVJjlu
        Knlxxakyw5lXne6C6kwXVGW4oDLdmXp5mhPKUq6hNMkexQm2KODblGZHGjml3z+5MTXCUEkQYvJ3uuCH
        mJBvPK08xSGgJut6aX2hP2rzvVCbx+GL2+MqgUIARcSZ3xLixfS7T5wIUUM4Gou9UZ3DQVmqI/JiLZAU
        ahoU433swyBKE6x8W2oeQdojVAhgJB8jI3kYGcrByCDxgSzimRjuT8dQXxqGegXkV4Dh3mTiSRjpF6BP
        koKCVE9EeRpw5Uu/n1WlWQMDiUQ4lwgXEiGZ4LBccLgvlQoO96aQ32QMShIx2MMnHi9zaRIZJ/8vjkBz
        xlnwPHdAvvT7WX6YOiRZOzH06leyYKxMtD+Tig5Kkoi/wADxwR7ikgTyN+MEQpqCAXEspI3e6Klio0ug
        hSYuCzHsxRTA2dn5Y7abuwqbLXN7tpuKjb2bigkZp8JvTMhdho7IzyBOXIPuwrPoa/bBQFcUhRmU8jEk
        ZXYah8HuJxjoCCPzfpDWuaGnzBKijINoiliCF7c34x5HH/eu6+Ie+3s4uLnNyS2ohJfvXXj4BILjwYXb
        TV9cY7vDwtqh1crKappcnsXKubMC7eF/QVfMHHQkb0RX7hGIKyzR+9oH/eKH6O28D2mLJ3pKTNCVrgVR
        vDLaHs9FS8inaCA7rvJiwdWZpFFu3MAwRPMSkSqsRH//IIaGh9EmEqOlrQs1Da246uiOX2yvw/iClRIF
        EAauRlvEVHTGzocoWR2d2QfRVfRfSBpd0Su6B0kbF+I6B3RmaKM9ZiFaI6bgdTALTQEsNNxhoYY7Ga4u
        NlS8qbkdpRV1eJ6ci5zCWgwODaOjU4KMvCqEP82EVzAfxeX1OGfuhJNGZjhsaKxEAFTQ/nAKuuIWoEOw
        CZ3CQ+guMUVPE4fsPhS97XchbXBGV44uOuJWou3RTLwO+xjNwR+hMZAA+E9SAJRVNSrEHzxNRXFFEwTZ
        5XgcnwtblwCYWLrihIktIp/wsVfPELv3HvKmEeiInCoH2EwA9AmA2RgAyRiAWQTgEwIwiQJU+31EAKyR
        nVcGHl+gEHL1CAbHLxLpwhKERMThiJE5Nm3XHeOaO/XAEt5dg46HBCCWAKTIAUrNIHklA5C2B6KngVR5
        jg4BWEUAZlOAVwSggaShmjsJfI81dGeHT1vC22Y7PQXrNu5Yde1GEJIEQnj4h2HbD0fAjDFz6zdoa6xT
        3wnVrQfAyglYQ2pgCqmBhRARgC6SAnGp6cQAz0kEokelgADUEIAqv8nUa3xZCLGSHUPGrjj5oqy8lkQj
        AGpb9ozrDwwISxhAUsDUAAGQRYDUwDgAJgU6KIjURHCUAM5ekTB3CqQAim9Hf6R7LkDILzIAybNns2zs
        bqGwuAKObt5Yp6YFZowqj7acAFkRyiKgQSIgqwGJvAbeRKAq5UeEx6TTYmNsi64ZBXhj4U+TYccJAcdy
        GwXo5PE0TpvaI6+gBPbk/H+jqoXOZ88OUtHRlv2eAI+fhMulAI7/YwXAGYsb8lHZuAPbkQJ0BAXggjkb
        7rdDYG7NpgBxFpbj0sDKurN6FMC7ayCCl0VFUrNLqPjoGohJyKFzDMD3hy5QkVeO/8NgWxsG6uvQV16G
        rqfR8NUhVf9byyZF2E5OwVsAfYjHRcAZIY9SqYiwoIoCCP0XUoB074XIL66hcwyA2p6fFAA9/Dh0x/Ko
        eMWZE+8G6IiUFaEoWZ6CCY5h4IMXqGtsp0IxCfk4+rMDDE2v4paPN4aGhtDYIoLdjRCs1TpFRRqvWqKb
        CLd5u+P1TVcK4L5r7wQAJAWKU0AA3tUHfPw8SHdLo0K/NWYsXvASlx38cPGCLAL15uchehCGFjc2mp3s
        UHbSAC6ash4xxsYAkCJ8F0BR/Gn8ZHWLVHsWktLLqHB1XStyC6uRlFEECyd/qGgew6/nN1KRWlNjtAfd
        QZOdNRquXEbxEV3YqWn8PgCtgdx3N6KCyK0Ugp/GPM+ArJc1CIoU0LHdxyyQ4bUAPiZzqUjVjyfRetsL
        9ZfPo4bA5Ovug9Va1QkAuPK74H1a8fNVeBn6jQIgKaMMNwPiYHjJFamei1Dnz8LtczKAiuOH8eqGK6qN
        T6Py1DHk7NXGxVVrxwNkcZUhimIiQACS/xigLXoWop+T5xsxHilGdwJgYOJIWzEFkEegTG8/mhztUH5M
        H2V6+5CxYytMvlQeD5DJVYGIRKA7blQrpsfwJnkPvAGQ34ZygJBoWUdkTgMTgYNnrioA3qSgmOy4/ooF
        SvbvQpH2NqRs2YAzC5ZPAOCngk7yJGMAOlPk74EJ74K3AP5hzCNWHoHAWOw+YYVK38n0heR7bg4VKdyh
        idqLpijcpoH8zapIUF2PE3OWTADgq8yrDZ0OSfx88rAcD9DbEUheRy5ygJVoj56BW2TXjMUkylKgZXCR
        Xs353p+Bc2Y+j1k3n+y4ytgIeWrrIVy3Gs+JG0yfPx7ghaf61hTfb5Ed+B+URGqgWbAPPeVvAfpEowFW
        0OuY7f14DICGjinCzD+HzeGlpRY6y7SYdRnhipNHIfx6JbJXLkWM8nLo/WPeeIAoT61P4m5pLo330fSN
        clmPmNsHkBqmj3LBBfS0BWNYGoqB1huQ5h9CT+IKiHkzYMt5IAOQ18CGPcawPqrMPbtj5dKf9b76K7Ou
        cK0KSvV1kPnvxchY8gWily2GzjRZeiY0Pkf101CHb+f5Wa3Tvmv7He++44bSe9fUEWSvjoCravC69DWu
        G38FR8NlsHAOVgAwEfhO2whmR9dPkS9FLZvsuGT/D8hYOA9pSrPwcJHS7wN8iJnZcykAU4Q3A+NI/zcc
        t3Dm8iUo2qWF1LnTIZj5OcIJxJ8GYGztQy8mpgYYgNVbj49bmAl72L9m4v7cGQidMx2hs//55wGcd/Bb
        u93gEjT1zmPTgXNgvuVTCruvNFPj7KIVMPpiGU7N+xLHZy+G7tS5GvJpubFY/weyBDVzf7/QBAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>